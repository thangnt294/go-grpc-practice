// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calculatorpb/calculator.proto

package calculatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CalSumRequest struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int32    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalSumRequest) Reset()         { *m = CalSumRequest{} }
func (m *CalSumRequest) String() string { return proto.CompactTextString(m) }
func (*CalSumRequest) ProtoMessage()    {}
func (*CalSumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{0}
}

func (m *CalSumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalSumRequest.Unmarshal(m, b)
}
func (m *CalSumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalSumRequest.Marshal(b, m, deterministic)
}
func (m *CalSumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalSumRequest.Merge(m, src)
}
func (m *CalSumRequest) XXX_Size() int {
	return xxx_messageInfo_CalSumRequest.Size(m)
}
func (m *CalSumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalSumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalSumRequest proto.InternalMessageInfo

func (m *CalSumRequest) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *CalSumRequest) GetSecondNumber() int32 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type CalSumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalSumResponse) Reset()         { *m = CalSumResponse{} }
func (m *CalSumResponse) String() string { return proto.CompactTextString(m) }
func (*CalSumResponse) ProtoMessage()    {}
func (*CalSumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{1}
}

func (m *CalSumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalSumResponse.Unmarshal(m, b)
}
func (m *CalSumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalSumResponse.Marshal(b, m, deterministic)
}
func (m *CalSumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalSumResponse.Merge(m, src)
}
func (m *CalSumResponse) XXX_Size() int {
	return xxx_messageInfo_CalSumResponse.Size(m)
}
func (m *CalSumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalSumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalSumResponse proto.InternalMessageInfo

func (m *CalSumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type PrimeDecompositionRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeDecompositionRequest) Reset()         { *m = PrimeDecompositionRequest{} }
func (m *PrimeDecompositionRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeDecompositionRequest) ProtoMessage()    {}
func (*PrimeDecompositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{2}
}

func (m *PrimeDecompositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeDecompositionRequest.Unmarshal(m, b)
}
func (m *PrimeDecompositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeDecompositionRequest.Marshal(b, m, deterministic)
}
func (m *PrimeDecompositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeDecompositionRequest.Merge(m, src)
}
func (m *PrimeDecompositionRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeDecompositionRequest.Size(m)
}
func (m *PrimeDecompositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeDecompositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeDecompositionRequest proto.InternalMessageInfo

func (m *PrimeDecompositionRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeDecompositionResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeDecompositionResponse) Reset()         { *m = PrimeDecompositionResponse{} }
func (m *PrimeDecompositionResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeDecompositionResponse) ProtoMessage()    {}
func (*PrimeDecompositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{3}
}

func (m *PrimeDecompositionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeDecompositionResponse.Unmarshal(m, b)
}
func (m *PrimeDecompositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeDecompositionResponse.Marshal(b, m, deterministic)
}
func (m *PrimeDecompositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeDecompositionResponse.Merge(m, src)
}
func (m *PrimeDecompositionResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeDecompositionResponse.Size(m)
}
func (m *PrimeDecompositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeDecompositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeDecompositionResponse proto.InternalMessageInfo

func (m *PrimeDecompositionResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type AverageRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageRequest) Reset()         { *m = AverageRequest{} }
func (m *AverageRequest) String() string { return proto.CompactTextString(m) }
func (*AverageRequest) ProtoMessage()    {}
func (*AverageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{4}
}

func (m *AverageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageRequest.Unmarshal(m, b)
}
func (m *AverageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageRequest.Marshal(b, m, deterministic)
}
func (m *AverageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageRequest.Merge(m, src)
}
func (m *AverageRequest) XXX_Size() int {
	return xxx_messageInfo_AverageRequest.Size(m)
}
func (m *AverageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AverageRequest proto.InternalMessageInfo

func (m *AverageRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type AverageResponse struct {
	Result               float32  `protobuf:"fixed32,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageResponse) Reset()         { *m = AverageResponse{} }
func (m *AverageResponse) String() string { return proto.CompactTextString(m) }
func (*AverageResponse) ProtoMessage()    {}
func (*AverageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{5}
}

func (m *AverageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageResponse.Unmarshal(m, b)
}
func (m *AverageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageResponse.Marshal(b, m, deterministic)
}
func (m *AverageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageResponse.Merge(m, src)
}
func (m *AverageResponse) XXX_Size() int {
	return xxx_messageInfo_AverageResponse.Size(m)
}
func (m *AverageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AverageResponse proto.InternalMessageInfo

func (m *AverageResponse) GetResult() float32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type FindMaxRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMaxRequest) Reset()         { *m = FindMaxRequest{} }
func (m *FindMaxRequest) String() string { return proto.CompactTextString(m) }
func (*FindMaxRequest) ProtoMessage()    {}
func (*FindMaxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{6}
}

func (m *FindMaxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMaxRequest.Unmarshal(m, b)
}
func (m *FindMaxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMaxRequest.Marshal(b, m, deterministic)
}
func (m *FindMaxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMaxRequest.Merge(m, src)
}
func (m *FindMaxRequest) XXX_Size() int {
	return xxx_messageInfo_FindMaxRequest.Size(m)
}
func (m *FindMaxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMaxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindMaxRequest proto.InternalMessageInfo

func (m *FindMaxRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type FindMaxResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMaxResponse) Reset()         { *m = FindMaxResponse{} }
func (m *FindMaxResponse) String() string { return proto.CompactTextString(m) }
func (*FindMaxResponse) ProtoMessage()    {}
func (*FindMaxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{7}
}

func (m *FindMaxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMaxResponse.Unmarshal(m, b)
}
func (m *FindMaxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMaxResponse.Marshal(b, m, deterministic)
}
func (m *FindMaxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMaxResponse.Merge(m, src)
}
func (m *FindMaxResponse) XXX_Size() int {
	return xxx_messageInfo_FindMaxResponse.Size(m)
}
func (m *FindMaxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMaxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindMaxResponse proto.InternalMessageInfo

func (m *FindMaxResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type SquareRootRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootRequest) Reset()         { *m = SquareRootRequest{} }
func (m *SquareRootRequest) String() string { return proto.CompactTextString(m) }
func (*SquareRootRequest) ProtoMessage()    {}
func (*SquareRootRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{8}
}

func (m *SquareRootRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootRequest.Unmarshal(m, b)
}
func (m *SquareRootRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootRequest.Marshal(b, m, deterministic)
}
func (m *SquareRootRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootRequest.Merge(m, src)
}
func (m *SquareRootRequest) XXX_Size() int {
	return xxx_messageInfo_SquareRootRequest.Size(m)
}
func (m *SquareRootRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootRequest proto.InternalMessageInfo

func (m *SquareRootRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type SquareRootResponse struct {
	SquareRoot           float64  `protobuf:"fixed64,1,opt,name=square_root,json=squareRoot,proto3" json:"square_root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootResponse) Reset()         { *m = SquareRootResponse{} }
func (m *SquareRootResponse) String() string { return proto.CompactTextString(m) }
func (*SquareRootResponse) ProtoMessage()    {}
func (*SquareRootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{9}
}

func (m *SquareRootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootResponse.Unmarshal(m, b)
}
func (m *SquareRootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootResponse.Marshal(b, m, deterministic)
}
func (m *SquareRootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootResponse.Merge(m, src)
}
func (m *SquareRootResponse) XXX_Size() int {
	return xxx_messageInfo_SquareRootResponse.Size(m)
}
func (m *SquareRootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootResponse proto.InternalMessageInfo

func (m *SquareRootResponse) GetSquareRoot() float64 {
	if m != nil {
		return m.SquareRoot
	}
	return 0
}

func init() {
	proto.RegisterType((*CalSumRequest)(nil), "calculator.CalSumRequest")
	proto.RegisterType((*CalSumResponse)(nil), "calculator.CalSumResponse")
	proto.RegisterType((*PrimeDecompositionRequest)(nil), "calculator.PrimeDecompositionRequest")
	proto.RegisterType((*PrimeDecompositionResponse)(nil), "calculator.PrimeDecompositionResponse")
	proto.RegisterType((*AverageRequest)(nil), "calculator.AverageRequest")
	proto.RegisterType((*AverageResponse)(nil), "calculator.AverageResponse")
	proto.RegisterType((*FindMaxRequest)(nil), "calculator.FindMaxRequest")
	proto.RegisterType((*FindMaxResponse)(nil), "calculator.FindMaxResponse")
	proto.RegisterType((*SquareRootRequest)(nil), "calculator.SquareRootRequest")
	proto.RegisterType((*SquareRootResponse)(nil), "calculator.SquareRootResponse")
}

func init() {
	proto.RegisterFile("calculator/calculatorpb/calculator.proto", fileDescriptor_7f42938f8c8365cf)
}

var fileDescriptor_7f42938f8c8365cf = []byte{
	// 375 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xdd, 0x4a, 0xeb, 0x40,
	0x10, 0xc7, 0x4f, 0x7a, 0x38, 0x29, 0x4c, 0x3f, 0x0e, 0x9d, 0x8b, 0x62, 0x23, 0x7e, 0x45, 0x94,
	0x88, 0x50, 0x8b, 0xd5, 0x07, 0xa8, 0x95, 0xe2, 0x4d, 0x45, 0xd2, 0x0b, 0xc1, 0x9b, 0x92, 0xa6,
	0x6b, 0x09, 0x24, 0xd9, 0x74, 0x77, 0x53, 0x7c, 0x1c, 0x1f, 0x55, 0xcc, 0x57, 0x77, 0x6d, 0x4a,
	0xbc, 0xdb, 0x99, 0xf9, 0xcf, 0x6f, 0x06, 0xfe, 0xb3, 0x60, 0xb9, 0x8e, 0xef, 0xc6, 0xbe, 0x23,
	0x28, 0xbb, 0xd9, 0x3e, 0xa3, 0x85, 0x14, 0xf4, 0x23, 0x46, 0x05, 0x45, 0xd8, 0x66, 0xcc, 0x57,
	0x68, 0x8d, 0x1d, 0x7f, 0x16, 0x07, 0x36, 0x59, 0xc7, 0x84, 0x0b, 0x3c, 0x83, 0xe6, 0xbb, 0xc7,
	0xb8, 0x98, 0x87, 0x71, 0xb0, 0x20, 0xec, 0x40, 0x3b, 0xd5, 0xac, 0x7f, 0x76, 0x23, 0xc9, 0x3d,
	0x27, 0x29, 0x3c, 0x87, 0x16, 0x27, 0x2e, 0x0d, 0x97, 0xb9, 0xa6, 0x96, 0x68, 0x9a, 0x69, 0x32,
	0x15, 0x99, 0x16, 0xb4, 0x73, 0x30, 0x8f, 0x68, 0xc8, 0x09, 0x76, 0x41, 0x67, 0x84, 0xc7, 0xbe,
	0xc8, 0x98, 0x59, 0x64, 0x0e, 0xa1, 0xf7, 0xc2, 0xbc, 0x80, 0x3c, 0x12, 0x97, 0x06, 0x11, 0xe5,
	0x9e, 0xf0, 0x68, 0x98, 0xaf, 0xd3, 0x05, 0x5d, 0x59, 0x24, 0x8b, 0xcc, 0x3b, 0x30, 0xca, 0x9a,
	0x2a, 0x46, 0x59, 0xd0, 0x1e, 0x6d, 0x08, 0x73, 0x56, 0xa4, 0x8a, 0x7f, 0x05, 0xff, 0x0b, 0x65,
	0x29, 0xb4, 0x26, 0x43, 0x27, 0x5e, 0xb8, 0x9c, 0x3a, 0x1f, 0xbf, 0x80, 0x16, 0xca, 0x8a, 0x4d,
	0xaf, 0xa1, 0x33, 0x5b, 0xc7, 0x0e, 0x23, 0x36, 0xa5, 0xa2, 0x8a, 0x7b, 0x0f, 0x28, 0x8b, 0x33,
	0xf4, 0x09, 0x34, 0x78, 0x92, 0x9d, 0x33, 0x4a, 0x53, 0xbe, 0x66, 0x03, 0x2f, 0x84, 0xb7, 0x9f,
	0x7f, 0xa1, 0x33, 0x2e, 0x4e, 0x61, 0x46, 0xd8, 0xc6, 0x73, 0x09, 0x8e, 0x40, 0x4f, 0x8d, 0xc3,
	0x5e, 0x5f, 0x3a, 0x1d, 0xe5, 0x4a, 0x0c, 0xa3, 0xac, 0x94, 0xce, 0x35, 0xff, 0xe0, 0x0a, 0x70,
	0xd7, 0x1c, 0xbc, 0x90, 0x7b, 0xf6, 0x3a, 0x6e, 0x5c, 0x56, 0xc9, 0xf2, 0x31, 0x03, 0x0d, 0x27,
	0x50, 0xcf, 0x5c, 0x42, 0x65, 0x23, 0xd5, 0x64, 0xe3, 0xb0, 0xb4, 0x96, 0x73, 0x2c, 0x0d, 0x9f,
	0xa0, 0x9e, 0x19, 0xa3, 0x72, 0x54, 0x5f, 0x55, 0xce, 0x0f, 0x27, 0xbf, 0x39, 0x03, 0x0d, 0xa7,
	0x00, 0x5b, 0x2b, 0xf0, 0x48, 0x6e, 0xd8, 0xf1, 0xd3, 0x38, 0xde, 0x57, 0xce, 0x91, 0x0f, 0xed,
	0xb7, 0xa6, 0xfc, 0x97, 0x17, 0x7a, 0xf2, 0x83, 0x87, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x25,
	0x3e, 0xad, 0xdd, 0xed, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	// Unary API
	CalSum(ctx context.Context, in *CalSumRequest, opts ...grpc.CallOption) (*CalSumResponse, error)
	// Server Streaming API
	PrimeDecomposition(ctx context.Context, in *PrimeDecompositionRequest, opts ...grpc.CallOption) (CalculatorService_PrimeDecompositionClient, error)
	// Client Streaming API
	Average(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_AverageClient, error)
	// Bidirectional Streaming API
	FindMax(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_FindMaxClient, error)
	// GRPC Error
	// This RPC will throw an exception if the sent number is negative
	// The err being sent is of type INVALID_ARGUMENT
	SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error)
}

type calculatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorServiceClient(cc *grpc.ClientConn) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) CalSum(ctx context.Context, in *CalSumRequest, opts ...grpc.CallOption) (*CalSumResponse, error) {
	out := new(CalSumResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/CalSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) PrimeDecomposition(ctx context.Context, in *PrimeDecompositionRequest, opts ...grpc.CallOption) (CalculatorService_PrimeDecompositionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[0], "/calculator.CalculatorService/PrimeDecomposition", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServicePrimeDecompositionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculatorService_PrimeDecompositionClient interface {
	Recv() (*PrimeDecompositionResponse, error)
	grpc.ClientStream
}

type calculatorServicePrimeDecompositionClient struct {
	grpc.ClientStream
}

func (x *calculatorServicePrimeDecompositionClient) Recv() (*PrimeDecompositionResponse, error) {
	m := new(PrimeDecompositionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) Average(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_AverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[1], "/calculator.CalculatorService/Average", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceAverageClient{stream}
	return x, nil
}

type CalculatorService_AverageClient interface {
	Send(*AverageRequest) error
	CloseAndRecv() (*AverageResponse, error)
	grpc.ClientStream
}

type calculatorServiceAverageClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceAverageClient) Send(m *AverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceAverageClient) CloseAndRecv() (*AverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) FindMax(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_FindMaxClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[2], "/calculator.CalculatorService/FindMax", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceFindMaxClient{stream}
	return x, nil
}

type CalculatorService_FindMaxClient interface {
	Send(*FindMaxRequest) error
	Recv() (*FindMaxResponse, error)
	grpc.ClientStream
}

type calculatorServiceFindMaxClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceFindMaxClient) Send(m *FindMaxRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceFindMaxClient) Recv() (*FindMaxResponse, error) {
	m := new(FindMaxResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error) {
	out := new(SquareRootResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/SquareRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	// Unary API
	CalSum(context.Context, *CalSumRequest) (*CalSumResponse, error)
	// Server Streaming API
	PrimeDecomposition(*PrimeDecompositionRequest, CalculatorService_PrimeDecompositionServer) error
	// Client Streaming API
	Average(CalculatorService_AverageServer) error
	// Bidirectional Streaming API
	FindMax(CalculatorService_FindMaxServer) error
	// GRPC Error
	// This RPC will throw an exception if the sent number is negative
	// The err being sent is of type INVALID_ARGUMENT
	SquareRoot(context.Context, *SquareRootRequest) (*SquareRootResponse, error)
}

// UnimplementedCalculatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServiceServer struct {
}

func (*UnimplementedCalculatorServiceServer) CalSum(ctx context.Context, req *CalSumRequest) (*CalSumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalSum not implemented")
}
func (*UnimplementedCalculatorServiceServer) PrimeDecomposition(req *PrimeDecompositionRequest, srv CalculatorService_PrimeDecompositionServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeDecomposition not implemented")
}
func (*UnimplementedCalculatorServiceServer) Average(srv CalculatorService_AverageServer) error {
	return status.Errorf(codes.Unimplemented, "method Average not implemented")
}
func (*UnimplementedCalculatorServiceServer) FindMax(srv CalculatorService_FindMaxServer) error {
	return status.Errorf(codes.Unimplemented, "method FindMax not implemented")
}
func (*UnimplementedCalculatorServiceServer) SquareRoot(ctx context.Context, req *SquareRootRequest) (*SquareRootResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SquareRoot not implemented")
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_CalSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalSumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).CalSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/CalSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).CalSum(ctx, req.(*CalSumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_PrimeDecomposition_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeDecompositionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServiceServer).PrimeDecomposition(m, &calculatorServicePrimeDecompositionServer{stream})
}

type CalculatorService_PrimeDecompositionServer interface {
	Send(*PrimeDecompositionResponse) error
	grpc.ServerStream
}

type calculatorServicePrimeDecompositionServer struct {
	grpc.ServerStream
}

func (x *calculatorServicePrimeDecompositionServer) Send(m *PrimeDecompositionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CalculatorService_Average_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).Average(&calculatorServiceAverageServer{stream})
}

type CalculatorService_AverageServer interface {
	SendAndClose(*AverageResponse) error
	Recv() (*AverageRequest, error)
	grpc.ServerStream
}

type calculatorServiceAverageServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceAverageServer) SendAndClose(m *AverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceAverageServer) Recv() (*AverageRequest, error) {
	m := new(AverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CalculatorService_FindMax_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).FindMax(&calculatorServiceFindMaxServer{stream})
}

type CalculatorService_FindMaxServer interface {
	Send(*FindMaxResponse) error
	Recv() (*FindMaxRequest, error)
	grpc.ServerStream
}

type calculatorServiceFindMaxServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceFindMaxServer) Send(m *FindMaxResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceFindMaxServer) Recv() (*FindMaxRequest, error) {
	m := new(FindMaxRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CalculatorService_SquareRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SquareRootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).SquareRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/SquareRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).SquareRoot(ctx, req.(*SquareRootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CalSum",
			Handler:    _CalculatorService_CalSum_Handler,
		},
		{
			MethodName: "SquareRoot",
			Handler:    _CalculatorService_SquareRoot_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeDecomposition",
			Handler:       _CalculatorService_PrimeDecomposition_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Average",
			Handler:       _CalculatorService_Average_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "FindMax",
			Handler:       _CalculatorService_FindMax_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/calculatorpb/calculator.proto",
}
