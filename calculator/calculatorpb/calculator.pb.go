// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calculatorpb/calculator.proto

package calculatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Calculate sum unary API
type CalSumRequest struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int32    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalSumRequest) Reset()         { *m = CalSumRequest{} }
func (m *CalSumRequest) String() string { return proto.CompactTextString(m) }
func (*CalSumRequest) ProtoMessage()    {}
func (*CalSumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{0}
}

func (m *CalSumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalSumRequest.Unmarshal(m, b)
}
func (m *CalSumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalSumRequest.Marshal(b, m, deterministic)
}
func (m *CalSumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalSumRequest.Merge(m, src)
}
func (m *CalSumRequest) XXX_Size() int {
	return xxx_messageInfo_CalSumRequest.Size(m)
}
func (m *CalSumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalSumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalSumRequest proto.InternalMessageInfo

func (m *CalSumRequest) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *CalSumRequest) GetSecondNumber() int32 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type CalSumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalSumResponse) Reset()         { *m = CalSumResponse{} }
func (m *CalSumResponse) String() string { return proto.CompactTextString(m) }
func (*CalSumResponse) ProtoMessage()    {}
func (*CalSumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{1}
}

func (m *CalSumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalSumResponse.Unmarshal(m, b)
}
func (m *CalSumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalSumResponse.Marshal(b, m, deterministic)
}
func (m *CalSumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalSumResponse.Merge(m, src)
}
func (m *CalSumResponse) XXX_Size() int {
	return xxx_messageInfo_CalSumResponse.Size(m)
}
func (m *CalSumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalSumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalSumResponse proto.InternalMessageInfo

func (m *CalSumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type PrimeDecompositionRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeDecompositionRequest) Reset()         { *m = PrimeDecompositionRequest{} }
func (m *PrimeDecompositionRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeDecompositionRequest) ProtoMessage()    {}
func (*PrimeDecompositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{2}
}

func (m *PrimeDecompositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeDecompositionRequest.Unmarshal(m, b)
}
func (m *PrimeDecompositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeDecompositionRequest.Marshal(b, m, deterministic)
}
func (m *PrimeDecompositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeDecompositionRequest.Merge(m, src)
}
func (m *PrimeDecompositionRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeDecompositionRequest.Size(m)
}
func (m *PrimeDecompositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeDecompositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeDecompositionRequest proto.InternalMessageInfo

func (m *PrimeDecompositionRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeDecompositionResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeDecompositionResponse) Reset()         { *m = PrimeDecompositionResponse{} }
func (m *PrimeDecompositionResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeDecompositionResponse) ProtoMessage()    {}
func (*PrimeDecompositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{3}
}

func (m *PrimeDecompositionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeDecompositionResponse.Unmarshal(m, b)
}
func (m *PrimeDecompositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeDecompositionResponse.Marshal(b, m, deterministic)
}
func (m *PrimeDecompositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeDecompositionResponse.Merge(m, src)
}
func (m *PrimeDecompositionResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeDecompositionResponse.Size(m)
}
func (m *PrimeDecompositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeDecompositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeDecompositionResponse proto.InternalMessageInfo

func (m *PrimeDecompositionResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type AverageRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageRequest) Reset()         { *m = AverageRequest{} }
func (m *AverageRequest) String() string { return proto.CompactTextString(m) }
func (*AverageRequest) ProtoMessage()    {}
func (*AverageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{4}
}

func (m *AverageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageRequest.Unmarshal(m, b)
}
func (m *AverageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageRequest.Marshal(b, m, deterministic)
}
func (m *AverageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageRequest.Merge(m, src)
}
func (m *AverageRequest) XXX_Size() int {
	return xxx_messageInfo_AverageRequest.Size(m)
}
func (m *AverageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AverageRequest proto.InternalMessageInfo

func (m *AverageRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type AverageResponse struct {
	Result               float32  `protobuf:"fixed32,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageResponse) Reset()         { *m = AverageResponse{} }
func (m *AverageResponse) String() string { return proto.CompactTextString(m) }
func (*AverageResponse) ProtoMessage()    {}
func (*AverageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{5}
}

func (m *AverageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageResponse.Unmarshal(m, b)
}
func (m *AverageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageResponse.Marshal(b, m, deterministic)
}
func (m *AverageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageResponse.Merge(m, src)
}
func (m *AverageResponse) XXX_Size() int {
	return xxx_messageInfo_AverageResponse.Size(m)
}
func (m *AverageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AverageResponse proto.InternalMessageInfo

func (m *AverageResponse) GetResult() float32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type FindMaxRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMaxRequest) Reset()         { *m = FindMaxRequest{} }
func (m *FindMaxRequest) String() string { return proto.CompactTextString(m) }
func (*FindMaxRequest) ProtoMessage()    {}
func (*FindMaxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{6}
}

func (m *FindMaxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMaxRequest.Unmarshal(m, b)
}
func (m *FindMaxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMaxRequest.Marshal(b, m, deterministic)
}
func (m *FindMaxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMaxRequest.Merge(m, src)
}
func (m *FindMaxRequest) XXX_Size() int {
	return xxx_messageInfo_FindMaxRequest.Size(m)
}
func (m *FindMaxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMaxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindMaxRequest proto.InternalMessageInfo

func (m *FindMaxRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type FindMaxResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMaxResponse) Reset()         { *m = FindMaxResponse{} }
func (m *FindMaxResponse) String() string { return proto.CompactTextString(m) }
func (*FindMaxResponse) ProtoMessage()    {}
func (*FindMaxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{7}
}

func (m *FindMaxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMaxResponse.Unmarshal(m, b)
}
func (m *FindMaxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMaxResponse.Marshal(b, m, deterministic)
}
func (m *FindMaxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMaxResponse.Merge(m, src)
}
func (m *FindMaxResponse) XXX_Size() int {
	return xxx_messageInfo_FindMaxResponse.Size(m)
}
func (m *FindMaxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMaxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindMaxResponse proto.InternalMessageInfo

func (m *FindMaxResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*CalSumRequest)(nil), "calculator.CalSumRequest")
	proto.RegisterType((*CalSumResponse)(nil), "calculator.CalSumResponse")
	proto.RegisterType((*PrimeDecompositionRequest)(nil), "calculator.PrimeDecompositionRequest")
	proto.RegisterType((*PrimeDecompositionResponse)(nil), "calculator.PrimeDecompositionResponse")
	proto.RegisterType((*AverageRequest)(nil), "calculator.AverageRequest")
	proto.RegisterType((*AverageResponse)(nil), "calculator.AverageResponse")
	proto.RegisterType((*FindMaxRequest)(nil), "calculator.FindMaxRequest")
	proto.RegisterType((*FindMaxResponse)(nil), "calculator.FindMaxResponse")
}

func init() {
	proto.RegisterFile("calculator/calculatorpb/calculator.proto", fileDescriptor_7f42938f8c8365cf)
}

var fileDescriptor_7f42938f8c8365cf = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xc1, 0x4e, 0xbb, 0x40,
	0x10, 0xc6, 0xff, 0xdb, 0xe4, 0x4f, 0x93, 0xb1, 0xad, 0xc9, 0x1e, 0x1a, 0x8b, 0x17, 0xc5, 0x68,
	0xf0, 0x52, 0x1b, 0xea, 0x0b, 0x54, 0x4d, 0xe3, 0x45, 0x63, 0xda, 0x83, 0xa6, 0x17, 0x03, 0x74,
	0x6c, 0x36, 0x01, 0x16, 0x77, 0x97, 0xc6, 0x07, 0xf0, 0xc1, 0x8d, 0xc0, 0x52, 0x56, 0x51, 0xbc,
	0x31, 0xdf, 0x7c, 0xfc, 0x66, 0xe0, 0xcb, 0x80, 0x1b, 0xfa, 0x51, 0x98, 0x45, 0xbe, 0xe2, 0xe2,
	0x62, 0xf7, 0x98, 0x06, 0xb5, 0x62, 0x9c, 0x0a, 0xae, 0x38, 0x85, 0x9d, 0xe2, 0x3c, 0x42, 0xff,
	0xda, 0x8f, 0x96, 0x59, 0xbc, 0xc0, 0xd7, 0x0c, 0xa5, 0xa2, 0xc7, 0xd0, 0x7b, 0x61, 0x42, 0xaa,
	0xe7, 0x24, 0x8b, 0x03, 0x14, 0x07, 0xe4, 0x88, 0xb8, 0xff, 0x17, 0x7b, 0xb9, 0x76, 0x9f, 0x4b,
	0xf4, 0x04, 0xfa, 0x12, 0x43, 0x9e, 0xac, 0xb5, 0xa7, 0x93, 0x7b, 0x7a, 0x85, 0x58, 0x98, 0x1c,
	0x17, 0x06, 0x1a, 0x2c, 0x53, 0x9e, 0x48, 0xa4, 0x43, 0xb0, 0x04, 0xca, 0x2c, 0x52, 0x25, 0xb3,
	0xac, 0x9c, 0x29, 0x8c, 0x1e, 0x04, 0x8b, 0xf1, 0x06, 0x43, 0x1e, 0xa7, 0x5c, 0x32, 0xc5, 0x78,
	0xa2, 0xd7, 0x19, 0x82, 0x65, 0x2c, 0x52, 0x56, 0xce, 0x25, 0xd8, 0x4d, 0x2f, 0xb5, 0x8c, 0x72,
	0x61, 0x30, 0xdb, 0xa2, 0xf0, 0x37, 0xd8, 0xc6, 0x3f, 0x87, 0xfd, 0xca, 0xd9, 0x08, 0xed, 0xd4,
	0xa1, 0x73, 0x96, 0xac, 0xef, 0xfc, 0xb7, 0x3f, 0x40, 0x2b, 0xe7, 0xef, 0x9b, 0x7a, 0x0b, 0x9d,
	0xcb, 0x12, 0xc5, 0x96, 0x85, 0x48, 0x67, 0x60, 0x15, 0x02, 0x1d, 0x8d, 0x6b, 0x89, 0x1a, 0xe1,
	0xd9, 0x76, 0x53, 0xab, 0x98, 0xe4, 0xfc, 0xf3, 0xde, 0x49, 0xd3, 0x9f, 0xd6, 0x03, 0x36, 0x40,
	0xbf, 0x37, 0xe9, 0x69, 0x9d, 0xf8, 0x63, 0x4c, 0xf6, 0x59, 0x9b, 0x4d, 0x2f, 0x31, 0x21, 0xde,
	0x53, 0x15, 0x82, 0x1e, 0x3d, 0x87, 0x6e, 0xa9, 0x50, 0xe3, 0x0b, 0xcc, 0xac, 0xec, 0xc3, 0xc6,
	0x9e, 0x26, 0xbb, 0xc4, 0x5b, 0x55, 0x49, 0x68, 0xf2, 0x2d, 0x74, 0x4b, 0xc5, 0x24, 0x9b, 0x81,
	0x99, 0xe4, 0x2f, 0x11, 0x7d, 0x92, 0x27, 0xe4, 0x6a, 0xb0, 0xea, 0xd5, 0xaf, 0x2a, 0xb0, 0xf2,
	0x5b, 0x9a, 0x7e, 0x04, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x67, 0x01, 0x25, 0x77, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalSumServiceClient is the client API for CalSumService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalSumServiceClient interface {
	// Unary API
	CalSum(ctx context.Context, in *CalSumRequest, opts ...grpc.CallOption) (*CalSumResponse, error)
}

type calSumServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalSumServiceClient(cc *grpc.ClientConn) CalSumServiceClient {
	return &calSumServiceClient{cc}
}

func (c *calSumServiceClient) CalSum(ctx context.Context, in *CalSumRequest, opts ...grpc.CallOption) (*CalSumResponse, error) {
	out := new(CalSumResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalSumService/CalSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalSumServiceServer is the server API for CalSumService service.
type CalSumServiceServer interface {
	// Unary API
	CalSum(context.Context, *CalSumRequest) (*CalSumResponse, error)
}

// UnimplementedCalSumServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalSumServiceServer struct {
}

func (*UnimplementedCalSumServiceServer) CalSum(ctx context.Context, req *CalSumRequest) (*CalSumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalSum not implemented")
}

func RegisterCalSumServiceServer(s *grpc.Server, srv CalSumServiceServer) {
	s.RegisterService(&_CalSumService_serviceDesc, srv)
}

func _CalSumService_CalSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalSumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalSumServiceServer).CalSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalSumService/CalSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalSumServiceServer).CalSum(ctx, req.(*CalSumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalSumService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalSumService",
	HandlerType: (*CalSumServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CalSum",
			Handler:    _CalSumService_CalSum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calculator/calculatorpb/calculator.proto",
}

// PrimeDecompositionServiceClient is the client API for PrimeDecompositionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PrimeDecompositionServiceClient interface {
	// Server Streaming API
	PrimeDecomposition(ctx context.Context, in *PrimeDecompositionRequest, opts ...grpc.CallOption) (PrimeDecompositionService_PrimeDecompositionClient, error)
}

type primeDecompositionServiceClient struct {
	cc *grpc.ClientConn
}

func NewPrimeDecompositionServiceClient(cc *grpc.ClientConn) PrimeDecompositionServiceClient {
	return &primeDecompositionServiceClient{cc}
}

func (c *primeDecompositionServiceClient) PrimeDecomposition(ctx context.Context, in *PrimeDecompositionRequest, opts ...grpc.CallOption) (PrimeDecompositionService_PrimeDecompositionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PrimeDecompositionService_serviceDesc.Streams[0], "/calculator.PrimeDecompositionService/PrimeDecomposition", opts...)
	if err != nil {
		return nil, err
	}
	x := &primeDecompositionServicePrimeDecompositionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PrimeDecompositionService_PrimeDecompositionClient interface {
	Recv() (*PrimeDecompositionResponse, error)
	grpc.ClientStream
}

type primeDecompositionServicePrimeDecompositionClient struct {
	grpc.ClientStream
}

func (x *primeDecompositionServicePrimeDecompositionClient) Recv() (*PrimeDecompositionResponse, error) {
	m := new(PrimeDecompositionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PrimeDecompositionServiceServer is the server API for PrimeDecompositionService service.
type PrimeDecompositionServiceServer interface {
	// Server Streaming API
	PrimeDecomposition(*PrimeDecompositionRequest, PrimeDecompositionService_PrimeDecompositionServer) error
}

// UnimplementedPrimeDecompositionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPrimeDecompositionServiceServer struct {
}

func (*UnimplementedPrimeDecompositionServiceServer) PrimeDecomposition(req *PrimeDecompositionRequest, srv PrimeDecompositionService_PrimeDecompositionServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeDecomposition not implemented")
}

func RegisterPrimeDecompositionServiceServer(s *grpc.Server, srv PrimeDecompositionServiceServer) {
	s.RegisterService(&_PrimeDecompositionService_serviceDesc, srv)
}

func _PrimeDecompositionService_PrimeDecomposition_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeDecompositionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PrimeDecompositionServiceServer).PrimeDecomposition(m, &primeDecompositionServicePrimeDecompositionServer{stream})
}

type PrimeDecompositionService_PrimeDecompositionServer interface {
	Send(*PrimeDecompositionResponse) error
	grpc.ServerStream
}

type primeDecompositionServicePrimeDecompositionServer struct {
	grpc.ServerStream
}

func (x *primeDecompositionServicePrimeDecompositionServer) Send(m *PrimeDecompositionResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _PrimeDecompositionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.PrimeDecompositionService",
	HandlerType: (*PrimeDecompositionServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeDecomposition",
			Handler:       _PrimeDecompositionService_PrimeDecomposition_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "calculator/calculatorpb/calculator.proto",
}

// AverageServiceClient is the client API for AverageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AverageServiceClient interface {
	// Client Streaming API
	Average(ctx context.Context, opts ...grpc.CallOption) (AverageService_AverageClient, error)
}

type averageServiceClient struct {
	cc *grpc.ClientConn
}

func NewAverageServiceClient(cc *grpc.ClientConn) AverageServiceClient {
	return &averageServiceClient{cc}
}

func (c *averageServiceClient) Average(ctx context.Context, opts ...grpc.CallOption) (AverageService_AverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AverageService_serviceDesc.Streams[0], "/calculator.AverageService/Average", opts...)
	if err != nil {
		return nil, err
	}
	x := &averageServiceAverageClient{stream}
	return x, nil
}

type AverageService_AverageClient interface {
	Send(*AverageRequest) error
	CloseAndRecv() (*AverageResponse, error)
	grpc.ClientStream
}

type averageServiceAverageClient struct {
	grpc.ClientStream
}

func (x *averageServiceAverageClient) Send(m *AverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *averageServiceAverageClient) CloseAndRecv() (*AverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AverageServiceServer is the server API for AverageService service.
type AverageServiceServer interface {
	// Client Streaming API
	Average(AverageService_AverageServer) error
}

// UnimplementedAverageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAverageServiceServer struct {
}

func (*UnimplementedAverageServiceServer) Average(srv AverageService_AverageServer) error {
	return status.Errorf(codes.Unimplemented, "method Average not implemented")
}

func RegisterAverageServiceServer(s *grpc.Server, srv AverageServiceServer) {
	s.RegisterService(&_AverageService_serviceDesc, srv)
}

func _AverageService_Average_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AverageServiceServer).Average(&averageServiceAverageServer{stream})
}

type AverageService_AverageServer interface {
	SendAndClose(*AverageResponse) error
	Recv() (*AverageRequest, error)
	grpc.ServerStream
}

type averageServiceAverageServer struct {
	grpc.ServerStream
}

func (x *averageServiceAverageServer) SendAndClose(m *AverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *averageServiceAverageServer) Recv() (*AverageRequest, error) {
	m := new(AverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _AverageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.AverageService",
	HandlerType: (*AverageServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Average",
			Handler:       _AverageService_Average_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/calculatorpb/calculator.proto",
}

// FindMaxServiceClient is the client API for FindMaxService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FindMaxServiceClient interface {
	// Bidirectional Streaming API
	FindMax(ctx context.Context, opts ...grpc.CallOption) (FindMaxService_FindMaxClient, error)
}

type findMaxServiceClient struct {
	cc *grpc.ClientConn
}

func NewFindMaxServiceClient(cc *grpc.ClientConn) FindMaxServiceClient {
	return &findMaxServiceClient{cc}
}

func (c *findMaxServiceClient) FindMax(ctx context.Context, opts ...grpc.CallOption) (FindMaxService_FindMaxClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FindMaxService_serviceDesc.Streams[0], "/calculator.FindMaxService/FindMax", opts...)
	if err != nil {
		return nil, err
	}
	x := &findMaxServiceFindMaxClient{stream}
	return x, nil
}

type FindMaxService_FindMaxClient interface {
	Send(*FindMaxRequest) error
	Recv() (*FindMaxResponse, error)
	grpc.ClientStream
}

type findMaxServiceFindMaxClient struct {
	grpc.ClientStream
}

func (x *findMaxServiceFindMaxClient) Send(m *FindMaxRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *findMaxServiceFindMaxClient) Recv() (*FindMaxResponse, error) {
	m := new(FindMaxResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FindMaxServiceServer is the server API for FindMaxService service.
type FindMaxServiceServer interface {
	// Bidirectional Streaming API
	FindMax(FindMaxService_FindMaxServer) error
}

// UnimplementedFindMaxServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFindMaxServiceServer struct {
}

func (*UnimplementedFindMaxServiceServer) FindMax(srv FindMaxService_FindMaxServer) error {
	return status.Errorf(codes.Unimplemented, "method FindMax not implemented")
}

func RegisterFindMaxServiceServer(s *grpc.Server, srv FindMaxServiceServer) {
	s.RegisterService(&_FindMaxService_serviceDesc, srv)
}

func _FindMaxService_FindMax_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FindMaxServiceServer).FindMax(&findMaxServiceFindMaxServer{stream})
}

type FindMaxService_FindMaxServer interface {
	Send(*FindMaxResponse) error
	Recv() (*FindMaxRequest, error)
	grpc.ServerStream
}

type findMaxServiceFindMaxServer struct {
	grpc.ServerStream
}

func (x *findMaxServiceFindMaxServer) Send(m *FindMaxResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *findMaxServiceFindMaxServer) Recv() (*FindMaxRequest, error) {
	m := new(FindMaxRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _FindMaxService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.FindMaxService",
	HandlerType: (*FindMaxServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FindMax",
			Handler:       _FindMaxService_FindMax_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/calculatorpb/calculator.proto",
}
